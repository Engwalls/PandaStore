@model IEnumerable<PandaStore.Models.CustomerProduct>

@{
    ViewData["Title"] = "Index";
}
@{
    double totalPrice = 0; {}
}


@if (Model != null && Model.Any())
{
    <div>
        <table class="table">
            <thead>
                <tr>
                    @*<th>
                        @Html.DisplayName("CustomerProduct ID")
                    </th>*@
                    <th>
                         @Html.DisplayNameFor(model => model.ProductName)
                    </th>               
                    <th>
                        @Html.DisplayNameFor(model => model.Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Sum)
                    </th>
                    <th>
                       @Html.DisplayName("Lägg till")
                    </th>
                    <th>
                       @Html.DisplayName("")
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.CustomerProductID)
                        </td>*@
                         <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity) st
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price) SEK
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Sum) SEK
                        </td>
                        <td>
                            <form method="post" asp-controller="CustomerProduct" asp-action="ChangeQuantity">
                                <input type="hidden" name="productId" value="@item.FK_ProductID" />
                                <input type="hidden" name="price" value="@item.Price" />
                                @if (item.Quantity > 0)
                                {
                                    <div class="quantity-input quantity-form" name="quantity" onchange="updateCartItem(this, @item.CustomerProductID, @item.Quantity)">

                                        <select class="quantity-dropdown" name="quantity">
                                        @for (var i = 1; i <= 5; i++)
                                        {
                                                <option value="@i" max="@item.Quantity">@i st </option>
                                        }
                                        </select>
                                        <button type="submit" class="btn btn-secondary buy-button">Ändra</button>
                                    </div>
                                    
                                }
                                else
                                {
                                    <h6>Slutsåld</h6>
                                    <button type="submit" class="btn btn-primary buy-button" disabled>Köp</button>
                                }
                            </form>
                            @*@Html.DisplayFor(modelItem => item.ReceiptNumber)*@
                        </td>
                        @{totalPrice += Math.Round(item.Price * item.Quantity, 2);}
                        <td>
                            <form asp-controller="CustomerProduct" asp-action="RemoveFromCart" method="post">
                                <input type="hidden" name="id" value="@item.FK_ProductID" />
                                <button class="btn btn-danger"  type="submit">Radera</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
            @*<h3>Totalt belopp: @totalPrice kr</h3>*@
            <h3>Totalt belopp: @totalPrice.ToString("N2", new System.Globalization.CultureInfo("sv-SE")) kr</h3>
        </div>
        <a class="btn btn-primary" asp-action="CheckOut">Vidare till kassan</a> 
        <button class="btn btn-secondary" onclick="goBack()">Fortsätt handla</button>
        @*<a class="btn btn-secondary" href="@Context.Request.Headers["Referer"]">Fortsätt handla</a>*@
        </div>
}
else
{
    <div>
        <h3>Varukorgen är tom</h3>
        <p>När du lägger till något i din varukorg så dyker det upp här</p>
        <a class="btn btn-primary" asp-controller="Home" asp-action="Index">
                Börja Handla
        </a>
    </div>
}

@section Scripts {
    <script>

        function goBack() {
            window.history.back();
        }
        function updateCartItem(selectElement, customerProductId, existingQuantity) {
            var newQuantity = parseInt(selectElement.value);

            // Kolla om det nya antalet är annorlunda än det befintliga antalet
            if (newQuantity !== existingQuantity) {
                // Uppdatera det dolda formulärfältet
                var quantityInput = selectElement.closest('.quantity-input').querySelector('input[name="quantity"]');
                quantityInput.value = newQuantity;

                // Trigga formuläret för att skicka innehållet till servern
                var form = selectElement.closest('form');
                form.submit();
            }
        }
        
        document.querySelectorAll('.quantity-plus').forEach(function (button) {
            button.addEventListener('click', function () {
                var input = this.previousElementSibling;
                if (input.value < input.getAttribute('max')) {
                    input.value = parseInt(input.value) + 1;
                }
            });
        });
    </script>
}

