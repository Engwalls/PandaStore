// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PandaStore.Data;

#nullable disable

namespace PandaStore.Migrations
{
    [DbContext(typeof(PandaStoreContext))]
    partial class PandaStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PandaStore.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignID"));

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FK_ProductID")
                        .HasColumnType("int");

                    b.Property<int>("FK_UserID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignID");

                    b.HasIndex("FK_ProductID");

                    b.HasIndex("FK_UserID");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("PandaStore.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryTitel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("PandaStore.Models.CustomerProduct", b =>
                {
                    b.Property<int>("CustomerProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerProductID"));

                    b.Property<int>("FK_ProductID")
                        .HasColumnType("int");

                    b.Property<int>("FK_ReceiptID")
                        .HasColumnType("int");

                    b.Property<int>("FK_UserID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomerProductID");

                    b.HasIndex("FK_ProductID");

                    b.HasIndex("FK_ReceiptID");

                    b.HasIndex("FK_UserID");

                    b.ToTable("CustomerProducts");
                });

            modelBuilder.Entity("PandaStore.Models.CustomerRate", b =>
                {
                    b.Property<int>("CustomerRateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerRateID"));

                    b.Property<int>("FK_ProductID")
                        .HasColumnType("int");

                    b.Property<string>("RateDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerRateID");

                    b.HasIndex("FK_ProductID");

                    b.ToTable("CustomerRates");
                });

            modelBuilder.Entity("PandaStore.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<double>("OrderTotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PandaStore.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("FK_OrderID")
                        .HasColumnType("int");

                    b.Property<int>("FK_OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("FK_ReceiptID")
                        .HasColumnType("int");

                    b.Property<int>("FK_UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("FK_OrderID");

                    b.HasIndex("FK_OrderStatus");

                    b.HasIndex("FK_ReceiptID");

                    b.HasIndex("FK_UserID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("PandaStore.Models.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderStatusID"));

                    b.Property<bool>("Delivered")
                        .HasColumnType("bit");

                    b.Property<bool>("Shipped")
                        .HasColumnType("bit");

                    b.Property<string>("StatusTitel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrderStatusID");

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("PandaStore.Models.Phone", b =>
                {
                    b.Property<int>("PhoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneID"));

                    b.Property<int>("FK_UserID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PhoneID");

                    b.HasIndex("FK_UserID");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("PandaStore.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FK_CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("InventoryQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextDelivery")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("ProductIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProductTitel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ProductID");

                    b.HasIndex("FK_CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PandaStore.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptID"));

                    b.Property<bool>("PaymentSucceeded")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiptNumber")
                        .HasColumnType("int");

                    b.HasKey("ReceiptID");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("PandaStore.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleTitel")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PandaStore.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("FK_RoleID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("RegistreredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("UserID");

                    b.HasIndex("FK_RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PandaStore.Models.Campaign", b =>
                {
                    b.HasOne("PandaStore.Models.Product", "Products")
                        .WithMany("Campaigns")
                        .HasForeignKey("FK_ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaStore.Models.User", "Users")
                        .WithMany("Campaigns")
                        .HasForeignKey("FK_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PandaStore.Models.CustomerProduct", b =>
                {
                    b.HasOne("PandaStore.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("FK_ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaStore.Models.Receipt", "Receipts")
                        .WithMany()
                        .HasForeignKey("FK_ReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaStore.Models.User", "Users")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("FK_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Receipts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PandaStore.Models.CustomerRate", b =>
                {
                    b.HasOne("PandaStore.Models.Product", "Products")
                        .WithMany("CustomerRates")
                        .HasForeignKey("FK_ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("PandaStore.Models.OrderDetail", b =>
                {
                    b.HasOne("PandaStore.Models.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FK_OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaStore.Models.OrderStatus", "OrderStatuses")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FK_OrderStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaStore.Models.Receipt", "Receipts")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FK_ReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaStore.Models.User", "Users")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FK_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatuses");

                    b.Navigation("Orders");

                    b.Navigation("Receipts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PandaStore.Models.Phone", b =>
                {
                    b.HasOne("PandaStore.Models.User", "Users")
                        .WithMany("Phones")
                        .HasForeignKey("FK_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PandaStore.Models.Product", b =>
                {
                    b.HasOne("PandaStore.Models.Category", "Categorys")
                        .WithMany("Products")
                        .HasForeignKey("FK_CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorys");
                });

            modelBuilder.Entity("PandaStore.Models.User", b =>
                {
                    b.HasOne("PandaStore.Models.Role", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("FK_RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PandaStore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PandaStore.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PandaStore.Models.OrderStatus", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PandaStore.Models.Product", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("CustomerRates");
                });

            modelBuilder.Entity("PandaStore.Models.Receipt", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PandaStore.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PandaStore.Models.User", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("CustomerProducts");

                    b.Navigation("OrderDetails");

                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
